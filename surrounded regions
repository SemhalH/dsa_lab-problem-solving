class Solution {
public:
    void solve(vector<vector<char>>& board) {
        int s = board.size();
        if (s == 0) return;
        int d = board[0].size();
        if (d == 0) return; 
        if (s <= 2 || d <= 2) return;
        for (int j = 0; j < d; ++j) {
            if (board[0][j] == 'O') {
                dfs(board, 0, j);
            }
            if (board[s - 1][j] == 'O') {
                dfs(board, s - 1, j);
            }
        }
        for (int i = 0; i < s; ++i) {
            if (board[i][0] == 'O') {
                dfs(board, i, 0);
            }
            if (board[i][d - 1] == 'O') {
                dfs(board, i, d - 1);
            }
        }
        for (int i = 0; i < s; ++i) {
            for (int j = 0; j < d; ++j) {
                if (board[i][j] == 'O') { 
                    board[i][j] = 'X';
                } else if (board[i][j] == 'A') {
                    board[i][j] = 'O';
                }
            }
        }
    }
    void dfs(vector<vector<char>>& board, int i, int j) {
        if (i >= 0 && i < board.size() && j >= 0 && j < board[0].size() && board[i][j] == 'O') {
            board[i][j] = 'A';
            dfs(board, i + 1, j);
            dfs(board, i - 1, j);
            dfs(board, i, j + 1);
            dfs(board, i, j - 1);
        }
    }
};
